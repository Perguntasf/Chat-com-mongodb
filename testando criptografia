from database.mongohandler import Operations
from database.entities import User, Message
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.backends import default_backend
from cryptography.fernet import Fernet
import base64
import hashlib
import os

# Função para gerar uma chave a partir da senha
def generate_key_from_password(password, salt):
    kdf = PBKDF2HMAC(
        algorithm=hashes.SHA256(),
        length=32,
        salt=salt,
        iterations=100000,
        backend=default_backend()
    )
    key = base64.urlsafe_b64encode(kdf.derive(password.encode()))
    return key

# Função para hash da senha para armazenar
def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# Função para criptografar a mensagem
def encrypt_message(content, key):
    cipher_suite = Fernet(key)
    return cipher_suite.encrypt(content.encode()).decode()

# Função para descriptografar a mensagem
def decrypt_message(content, key):
    cipher_suite = Fernet(key)
    return cipher_suite.decrypt(content.encode()).decode()

if __name__ == "__main__":
    operations = Operations()

    while True:
        print("Escolha uma opção:")
        print("1. Fazer login")
        print("2. Cadastrar novo usuário")
        print("3. Sair")
        opcao = input("Digite o número da opção: ")

        if opcao == "1":
            nickname_from = input("Digite seu nickname: ")
            password = input("Digite sua senha: ")
            
            # Aplica hash na senha antes de verificar
            hashed_password = hash_password(password)

            login_sucesso = operations.validate_login(nickname_from, hashed_password)
            if login_sucesso:
                print("Login bem-sucedido!")
                # Gera um salt aleatório para derivar a chave de criptografia
                salt = os.urandom(16)
                key = generate_key_from_password(password, salt)  # Gera a chave a partir da senha

                while True:
                    print("Escolha uma opção:")
                    print("1. Enviar mensagem")
                    print("2. Ver mensagens recebidas")
                    print("3. Sair")
                    opcao = input("Digite o número da opção: ")

                    if opcao == "1":
                        nickname_to = input("Digite o nickname do destinatário: ")
                        content = input("Digite o conteúdo da mensagem: ")

                        # Criptografa a mensagem antes de salvar
                        encrypted_content = encrypt_message(content, key)

                        message = Message(nickname_from=nickname_from, nickname_to=nickname_to, content=encrypted_content)
                        operations.add_new_message(message)
                        print("Mensagem enviada com sucesso!")

                    elif opcao == "2":
                        nickname_sender = input("Digite o nickname da pessoa de quem você quer ver as mensagens: ")
                        messages = operations.get_messages_from(nickname_sender, nickname_from)
                        if messages:
                            print(f"Mensagens de {nickname_sender}:")
                            for msg in messages:
                                try:
                                    # Descriptografa a mensagem com a chave derivada da senha
                                    decrypted_content = decrypt_message(msg['content'], key)
                                    print(f"- {decrypted_content}")
                                except:
                                    print("Falha ao descriptografar a mensagem. Senha incorreta ou mensagem corrompida.")
                        else:
                            print(f"Não há mensagens de {nickname_sender}.")
                    elif opcao == "3":
                        print("Saindo...")
                        break
                    else:
                        print("Opção inválida. Tente novamente.")
            else:
                print("Nickname ou senha incorretos.")

        elif opcao == "2":
            nickname = input("Digite seu nickname: ")
            email = input("Digite seu email: ")
            password = input("Digite sua senha: ")

            # Aplica hash na senha antes de salvar
            hashed_password = hash_password(password)

            new_user = User(nickname=nickname, email=email, password=hashed_password)
            cadastro_sucesso = operations.add_new_user(new_user)
            if cadastro_sucesso:
                print("Cadastro realizado com sucesso!")
            else:
                print("Erro: Usuário já cadastrado ou problema no cadastro.")

        elif opcao == "3":
            print("Saindo...")
            break

        else:
            print("Opção inválida. Tente novamente.")
